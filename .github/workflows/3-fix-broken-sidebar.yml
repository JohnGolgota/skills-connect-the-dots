name: Step 3, Fix a broken sidebar

# This step listens for the learner opening, editing, or reopening a pull request
# This step sets STEP to X
# This step closes <details id=3> and opens <details id=X>

# This will run every time we open, edit, or reopen the pull request
# Reference https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows
on:
  workflow_dispatch:
  pull_request:
    types: [opened, edited, reopened]

permissions:
  # Need `contents: read` to checkout the repository
  # Need `contents: write` to update the step metadata
  contents: write

jobs:
  # Get the current step from .github/script/STEP so we can
  # limit running the main job when the learner is on the same step.
  get_current_step:
    name: Check current step number
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: get_step
        run: |
          echo "current_step=$(cat ./.github/script/STEP)" >> $GITHUB_OUTPUT
    outputs:
      current_step: ${{ steps.get_step.outputs.current_step }}
      
  on_fix_the_sidebar_pr_body:
    name: Check if the PR body is containing the correct closing message
    needs: get_current_step
    
    # We will only run this action when:
    # 1. This repository isn't the template repository
    # 2. The STEP is currently 3
    # Reference https://docs.github.com/en/actions/learn-github-actions/contexts
    # Reference https://docs.github.com/en/actions/learn-github-actions/expressions
    if: >-
      ${{ !github.event.repository.is_template
          && needs.get_current_step.outputs.current_step == 3 }}

    # We'll run Ubuntu for performance instead of Mac or Windows
    runs-on: ubuntu-latest

    steps:
      # We'll need to check out the repository so that we can edit the README
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Let's get all the branches
        
      - name: Dump GitHub pull request context
        id: github_pull_request_step
        run: echo '${{ toJSON(github.event.pull_request) }}'
        
      - name: Check if the PR body is containing the required closing message
        if: contains(github.event.pull_request.body, 'Closes')
        run: echo "Found _Closes_ message with autolinked issue in the body of PR $NUMBER"
        env:
          NUMBER: ${{ github.event.pull_request.number }}

      # Update README to close <details id=3>
      # and open <details id=X>
      # and set STEP to 'X'
      - name: Update to step X
        uses: skills/action-update-step@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          from_step: 3
          to_step: X

